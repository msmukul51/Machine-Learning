{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMicn0OU0ZMw6b1D+5F8VvM"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":50,"metadata":{"id":"ONCK5ZJAZZi1","executionInfo":{"status":"ok","timestamp":1688552853808,"user_tz":-330,"elapsed":722,"user":{"displayName":"Mukul Saini","userId":"14387970865535014153"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","source":["df=pd.read_csv('master.csv')"],"metadata":{"id":"EaWG3I7zaPjc","executionInfo":{"status":"ok","timestamp":1688552855802,"user_tz":-330,"elapsed":465,"user":{"displayName":"Mukul Saini","userId":"14387970865535014153"}}},"execution_count":51,"outputs":[]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cy-mKohpaXvi","executionInfo":{"status":"ok","timestamp":1688549834059,"user_tz":-330,"elapsed":11,"user":{"displayName":"Mukul Saini","userId":"14387970865535014153"}},"outputId":"c2c41765-83ac-4ece-d2de-670f1d71254c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['country', 'year', 'sex', 'age', 'suicides_no', 'population',\n","       'suicides/100k pop', 'country-year', 'HDI for year',\n","       ' gdp_for_year ($) ', 'gdp_per_capita ($)', 'generation'],\n","      dtype='object')"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"5YmOooqYb3aO","executionInfo":{"status":"ok","timestamp":1688550216779,"user_tz":-330,"elapsed":471,"user":{"displayName":"Mukul Saini","userId":"14387970865535014153"}},"outputId":"66804e5d-c64c-42ea-9621-6b8132ec8137"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   country  year     sex          age  suicides_no  population  \\\n","0  Albania  1987    male  15-24 years           21      312900   \n","1  Albania  1987    male  35-54 years           16      308000   \n","2  Albania  1987  female  15-24 years           14      289700   \n","3  Albania  1987    male    75+ years            1       21800   \n","4  Albania  1987    male  25-34 years            9      274300   \n","\n","   suicides/100k pop country-year  HDI for year  gdp_for_year ($)   \\\n","0               6.71  Albania1987           NaN      2,156,624,900   \n","1               5.19  Albania1987           NaN      2,156,624,900   \n","2               4.83  Albania1987           NaN      2,156,624,900   \n","3               4.59  Albania1987           NaN      2,156,624,900   \n","4               3.28  Albania1987           NaN      2,156,624,900   \n","\n","   gdp_per_capita ($)       generation  \n","0                 796     Generation X  \n","1                 796           Silent  \n","2                 796     Generation X  \n","3                 796  G.I. Generation  \n","4                 796          Boomers  "],"text/html":["\n","  <div id=\"df-5a727776-d175-4f76-8771-25784e0e4231\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>year</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>suicides_no</th>\n","      <th>population</th>\n","      <th>suicides/100k pop</th>\n","      <th>country-year</th>\n","      <th>HDI for year</th>\n","      <th>gdp_for_year ($)</th>\n","      <th>gdp_per_capita ($)</th>\n","      <th>generation</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Albania</td>\n","      <td>1987</td>\n","      <td>male</td>\n","      <td>15-24 years</td>\n","      <td>21</td>\n","      <td>312900</td>\n","      <td>6.71</td>\n","      <td>Albania1987</td>\n","      <td>NaN</td>\n","      <td>2,156,624,900</td>\n","      <td>796</td>\n","      <td>Generation X</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Albania</td>\n","      <td>1987</td>\n","      <td>male</td>\n","      <td>35-54 years</td>\n","      <td>16</td>\n","      <td>308000</td>\n","      <td>5.19</td>\n","      <td>Albania1987</td>\n","      <td>NaN</td>\n","      <td>2,156,624,900</td>\n","      <td>796</td>\n","      <td>Silent</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Albania</td>\n","      <td>1987</td>\n","      <td>female</td>\n","      <td>15-24 years</td>\n","      <td>14</td>\n","      <td>289700</td>\n","      <td>4.83</td>\n","      <td>Albania1987</td>\n","      <td>NaN</td>\n","      <td>2,156,624,900</td>\n","      <td>796</td>\n","      <td>Generation X</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Albania</td>\n","      <td>1987</td>\n","      <td>male</td>\n","      <td>75+ years</td>\n","      <td>1</td>\n","      <td>21800</td>\n","      <td>4.59</td>\n","      <td>Albania1987</td>\n","      <td>NaN</td>\n","      <td>2,156,624,900</td>\n","      <td>796</td>\n","      <td>G.I. Generation</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Albania</td>\n","      <td>1987</td>\n","      <td>male</td>\n","      <td>25-34 years</td>\n","      <td>9</td>\n","      <td>274300</td>\n","      <td>3.28</td>\n","      <td>Albania1987</td>\n","      <td>NaN</td>\n","      <td>2,156,624,900</td>\n","      <td>796</td>\n","      <td>Boomers</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5a727776-d175-4f76-8771-25784e0e4231')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5a727776-d175-4f76-8771-25784e0e4231 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5a727776-d175-4f76-8771-25784e0e4231');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df['country'].nunique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qib8SAU-b6yV","executionInfo":{"status":"ok","timestamp":1688550621922,"user_tz":-330,"elapsed":430,"user":{"displayName":"Mukul Saini","userId":"14387970865535014153"}},"outputId":"c68c147d-4496-4529-ddf7-2c89f39d798e"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["101"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["df.nunique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gqIrd7twcK9d","executionInfo":{"status":"ok","timestamp":1688550656235,"user_tz":-330,"elapsed":583,"user":{"displayName":"Mukul Saini","userId":"14387970865535014153"}},"outputId":"6b51066b-cf6a-4b33-ca33-01cbceb1755d"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["country                 101\n","year                     32\n","sex                       2\n","age                       6\n","suicides_no            2084\n","population            25564\n","suicides/100k pop      5298\n","country-year           2321\n","HDI for year            305\n"," gdp_for_year ($)      2321\n","gdp_per_capita ($)     2233\n","generation                6\n","dtype: int64"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["df.duplicated().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zfyp595_dsDu","executionInfo":{"status":"ok","timestamp":1688550715059,"user_tz":-330,"elapsed":561,"user":{"displayName":"Mukul Saini","userId":"14387970865535014153"}},"outputId":"5234cf8c-2ec4-4aba-efd9-5a3d2dea32c6"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fOQ_Ijssd0ft","executionInfo":{"status":"ok","timestamp":1688550740864,"user_tz":-330,"elapsed":9,"user":{"displayName":"Mukul Saini","userId":"14387970865535014153"}},"outputId":"53354766-cfd1-47bc-ce29-261a7b0af210"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["country                   0\n","year                      0\n","sex                       0\n","age                       0\n","suicides_no               0\n","population                0\n","suicides/100k pop         0\n","country-year              0\n","HDI for year          19456\n"," gdp_for_year ($)         0\n","gdp_per_capita ($)        0\n","generation                0\n","dtype: int64"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["df.drop(columns='HDI for year',inplace=True)"],"metadata":{"id":"9q1OQDuRd7l9","executionInfo":{"status":"ok","timestamp":1688552862357,"user_tz":-330,"elapsed":411,"user":{"displayName":"Mukul Saini","userId":"14387970865535014153"}}},"execution_count":52,"outputs":[]},{"cell_type":"code","source":["df['generation'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"272WYUYxePst","executionInfo":{"status":"ok","timestamp":1688552864574,"user_tz":-330,"elapsed":484,"user":{"displayName":"Mukul Saini","userId":"14387970865535014153"}},"outputId":"7e5cf05e-f86d-477b-8a38-5bf86350c0bb"},"execution_count":53,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Generation X       6408\n","Silent             6364\n","Millenials         5844\n","Boomers            4990\n","G.I. Generation    2744\n","Generation Z       1470\n","Name: generation, dtype: int64"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"N7xy_fUFfSOt","executionInfo":{"status":"ok","timestamp":1688551114291,"user_tz":-330,"elapsed":471,"user":{"displayName":"Mukul Saini","userId":"14387970865535014153"}},"outputId":"b8b08da9-895c-455b-be1d-e0cd6c054cc5"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   country  year     sex          age  suicides_no  population  \\\n","0  Albania  1987    male  15-24 years           21      312900   \n","1  Albania  1987    male  35-54 years           16      308000   \n","2  Albania  1987  female  15-24 years           14      289700   \n","3  Albania  1987    male    75+ years            1       21800   \n","4  Albania  1987    male  25-34 years            9      274300   \n","\n","   suicides/100k pop country-year  gdp_for_year ($)   gdp_per_capita ($)  \\\n","0               6.71  Albania1987      2,156,624,900                 796   \n","1               5.19  Albania1987      2,156,624,900                 796   \n","2               4.83  Albania1987      2,156,624,900                 796   \n","3               4.59  Albania1987      2,156,624,900                 796   \n","4               3.28  Albania1987      2,156,624,900                 796   \n","\n","        generation  \n","0     Generation X  \n","1           Silent  \n","2     Generation X  \n","3  G.I. Generation  \n","4          Boomers  "],"text/html":["\n","  <div id=\"df-b22ebe5f-0934-41fb-8682-9146092f1087\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>year</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>suicides_no</th>\n","      <th>population</th>\n","      <th>suicides/100k pop</th>\n","      <th>country-year</th>\n","      <th>gdp_for_year ($)</th>\n","      <th>gdp_per_capita ($)</th>\n","      <th>generation</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Albania</td>\n","      <td>1987</td>\n","      <td>male</td>\n","      <td>15-24 years</td>\n","      <td>21</td>\n","      <td>312900</td>\n","      <td>6.71</td>\n","      <td>Albania1987</td>\n","      <td>2,156,624,900</td>\n","      <td>796</td>\n","      <td>Generation X</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Albania</td>\n","      <td>1987</td>\n","      <td>male</td>\n","      <td>35-54 years</td>\n","      <td>16</td>\n","      <td>308000</td>\n","      <td>5.19</td>\n","      <td>Albania1987</td>\n","      <td>2,156,624,900</td>\n","      <td>796</td>\n","      <td>Silent</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Albania</td>\n","      <td>1987</td>\n","      <td>female</td>\n","      <td>15-24 years</td>\n","      <td>14</td>\n","      <td>289700</td>\n","      <td>4.83</td>\n","      <td>Albania1987</td>\n","      <td>2,156,624,900</td>\n","      <td>796</td>\n","      <td>Generation X</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Albania</td>\n","      <td>1987</td>\n","      <td>male</td>\n","      <td>75+ years</td>\n","      <td>1</td>\n","      <td>21800</td>\n","      <td>4.59</td>\n","      <td>Albania1987</td>\n","      <td>2,156,624,900</td>\n","      <td>796</td>\n","      <td>G.I. Generation</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Albania</td>\n","      <td>1987</td>\n","      <td>male</td>\n","      <td>25-34 years</td>\n","      <td>9</td>\n","      <td>274300</td>\n","      <td>3.28</td>\n","      <td>Albania1987</td>\n","      <td>2,156,624,900</td>\n","      <td>796</td>\n","      <td>Boomers</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b22ebe5f-0934-41fb-8682-9146092f1087')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b22ebe5f-0934-41fb-8682-9146092f1087 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b22ebe5f-0934-41fb-8682-9146092f1087');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["df.corr()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":261},"id":"SHygj15FfXJF","executionInfo":{"status":"ok","timestamp":1688551132330,"user_tz":-330,"elapsed":763,"user":{"displayName":"Mukul Saini","userId":"14387970865535014153"}},"outputId":"807d87df-1f2a-401b-8e0e-20b42719d086"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-23-2f6f6606aa2c>:1: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.\n","  df.corr()\n"]},{"output_type":"execute_result","data":{"text/plain":["                        year  suicides_no  population  suicides/100k pop  \\\n","year                1.000000    -0.004546    0.008850          -0.039037   \n","suicides_no        -0.004546     1.000000    0.616162           0.306604   \n","population          0.008850     0.616162    1.000000           0.008285   \n","suicides/100k pop  -0.039037     0.306604    0.008285           1.000000   \n","gdp_per_capita ($)  0.339134     0.061330    0.081510           0.001785   \n","\n","                    gdp_per_capita ($)  \n","year                          0.339134  \n","suicides_no                   0.061330  \n","population                    0.081510  \n","suicides/100k pop             0.001785  \n","gdp_per_capita ($)            1.000000  "],"text/html":["\n","  <div id=\"df-caeb1fd7-ddcb-4384-aa53-e65895d2ec4b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>suicides_no</th>\n","      <th>population</th>\n","      <th>suicides/100k pop</th>\n","      <th>gdp_per_capita ($)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>year</th>\n","      <td>1.000000</td>\n","      <td>-0.004546</td>\n","      <td>0.008850</td>\n","      <td>-0.039037</td>\n","      <td>0.339134</td>\n","    </tr>\n","    <tr>\n","      <th>suicides_no</th>\n","      <td>-0.004546</td>\n","      <td>1.000000</td>\n","      <td>0.616162</td>\n","      <td>0.306604</td>\n","      <td>0.061330</td>\n","    </tr>\n","    <tr>\n","      <th>population</th>\n","      <td>0.008850</td>\n","      <td>0.616162</td>\n","      <td>1.000000</td>\n","      <td>0.008285</td>\n","      <td>0.081510</td>\n","    </tr>\n","    <tr>\n","      <th>suicides/100k pop</th>\n","      <td>-0.039037</td>\n","      <td>0.306604</td>\n","      <td>0.008285</td>\n","      <td>1.000000</td>\n","      <td>0.001785</td>\n","    </tr>\n","    <tr>\n","      <th>gdp_per_capita ($)</th>\n","      <td>0.339134</td>\n","      <td>0.061330</td>\n","      <td>0.081510</td>\n","      <td>0.001785</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-caeb1fd7-ddcb-4384-aa53-e65895d2ec4b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-caeb1fd7-ddcb-4384-aa53-e65895d2ec4b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-caeb1fd7-ddcb-4384-aa53-e65895d2ec4b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"TCTYNeXufnGt","executionInfo":{"status":"ok","timestamp":1688551201990,"user_tz":-330,"elapsed":444,"user":{"displayName":"Mukul Saini","userId":"14387970865535014153"}},"outputId":"7b2c2be2-fa86-4000-d049-dea7d8478426"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               year   suicides_no    population  suicides/100k pop  \\\n","count  27820.000000  27820.000000  2.782000e+04       27820.000000   \n","mean    2001.258375    242.574407  1.844794e+06          12.816097   \n","std        8.469055    902.047917  3.911779e+06          18.961511   \n","min     1985.000000      0.000000  2.780000e+02           0.000000   \n","25%     1995.000000      3.000000  9.749850e+04           0.920000   \n","50%     2002.000000     25.000000  4.301500e+05           5.990000   \n","75%     2008.000000    131.000000  1.486143e+06          16.620000   \n","max     2016.000000  22338.000000  4.380521e+07         224.970000   \n","\n","       gdp_per_capita ($)  \n","count        27820.000000  \n","mean         16866.464414  \n","std          18887.576472  \n","min            251.000000  \n","25%           3447.000000  \n","50%           9372.000000  \n","75%          24874.000000  \n","max         126352.000000  "],"text/html":["\n","  <div id=\"df-bfa49efa-89ce-4a60-a4fc-76e348c60433\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>suicides_no</th>\n","      <th>population</th>\n","      <th>suicides/100k pop</th>\n","      <th>gdp_per_capita ($)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>27820.000000</td>\n","      <td>27820.000000</td>\n","      <td>2.782000e+04</td>\n","      <td>27820.000000</td>\n","      <td>27820.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2001.258375</td>\n","      <td>242.574407</td>\n","      <td>1.844794e+06</td>\n","      <td>12.816097</td>\n","      <td>16866.464414</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>8.469055</td>\n","      <td>902.047917</td>\n","      <td>3.911779e+06</td>\n","      <td>18.961511</td>\n","      <td>18887.576472</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1985.000000</td>\n","      <td>0.000000</td>\n","      <td>2.780000e+02</td>\n","      <td>0.000000</td>\n","      <td>251.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1995.000000</td>\n","      <td>3.000000</td>\n","      <td>9.749850e+04</td>\n","      <td>0.920000</td>\n","      <td>3447.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2002.000000</td>\n","      <td>25.000000</td>\n","      <td>4.301500e+05</td>\n","      <td>5.990000</td>\n","      <td>9372.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2008.000000</td>\n","      <td>131.000000</td>\n","      <td>1.486143e+06</td>\n","      <td>16.620000</td>\n","      <td>24874.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2016.000000</td>\n","      <td>22338.000000</td>\n","      <td>4.380521e+07</td>\n","      <td>224.970000</td>\n","      <td>126352.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bfa49efa-89ce-4a60-a4fc-76e348c60433')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bfa49efa-89ce-4a60-a4fc-76e348c60433 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bfa49efa-89ce-4a60-a4fc-76e348c60433');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["df['age'] = df['age'].str.replace('years','')"],"metadata":{"id":"avh68Z36gJx3","executionInfo":{"status":"ok","timestamp":1688552869294,"user_tz":-330,"elapsed":739,"user":{"displayName":"Mukul Saini","userId":"14387970865535014153"}}},"execution_count":54,"outputs":[]},{"cell_type":"code","source":["df['age'] = df['age'].str.replace('+','')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Yk0FJDeYht5V","executionInfo":{"status":"ok","timestamp":1688552871276,"user_tz":-330,"elapsed":502,"user":{"displayName":"Mukul Saini","userId":"14387970865535014153"}},"outputId":"391659bf-b37c-4140-d138-9a9258654302"},"execution_count":55,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-55-83bbed2885b0>:1: FutureWarning: The default value of regex will change from True to False in a future version. In addition, single character regular expressions will *not* be treated as literal strings when regex=True.\n","  df['age'] = df['age'].str.replace('+','')\n"]}]},{"cell_type":"code","source":["df['age'] = df['age'].str.replace('75','0-75')"],"metadata":{"id":"dt-UFir9iaRN","executionInfo":{"status":"ok","timestamp":1688552889701,"user_tz":-330,"elapsed":409,"user":{"displayName":"Mukul Saini","userId":"14387970865535014153"}}},"execution_count":57,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"_X4TjT1NhoDG","executionInfo":{"status":"ok","timestamp":1688551941874,"user_tz":-330,"elapsed":751,"user":{"displayName":"Mukul Saini","userId":"14387970865535014153"}},"outputId":"19192f1d-1d48-4565-f60b-e0f0d111b26c"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   country  year     sex     age  suicides_no  population  suicides/100k pop  \\\n","0  Albania  1987    male  15-24            21      312900               6.71   \n","1  Albania  1987    male  35-54            16      308000               5.19   \n","2  Albania  1987  female  15-24            14      289700               4.83   \n","3  Albania  1987    male   0-75             1       21800               4.59   \n","4  Albania  1987    male  25-34             9      274300               3.28   \n","\n","  country-year  gdp_for_year ($)   gdp_per_capita ($)       generation  \n","0  Albania1987      2,156,624,900                 796     Generation X  \n","1  Albania1987      2,156,624,900                 796           Silent  \n","2  Albania1987      2,156,624,900                 796     Generation X  \n","3  Albania1987      2,156,624,900                 796  G.I. Generation  \n","4  Albania1987      2,156,624,900                 796          Boomers  "],"text/html":["\n","  <div id=\"df-3f73af99-b1c9-4b36-84a6-9f696195b312\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>year</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>suicides_no</th>\n","      <th>population</th>\n","      <th>suicides/100k pop</th>\n","      <th>country-year</th>\n","      <th>gdp_for_year ($)</th>\n","      <th>gdp_per_capita ($)</th>\n","      <th>generation</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Albania</td>\n","      <td>1987</td>\n","      <td>male</td>\n","      <td>15-24</td>\n","      <td>21</td>\n","      <td>312900</td>\n","      <td>6.71</td>\n","      <td>Albania1987</td>\n","      <td>2,156,624,900</td>\n","      <td>796</td>\n","      <td>Generation X</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Albania</td>\n","      <td>1987</td>\n","      <td>male</td>\n","      <td>35-54</td>\n","      <td>16</td>\n","      <td>308000</td>\n","      <td>5.19</td>\n","      <td>Albania1987</td>\n","      <td>2,156,624,900</td>\n","      <td>796</td>\n","      <td>Silent</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Albania</td>\n","      <td>1987</td>\n","      <td>female</td>\n","      <td>15-24</td>\n","      <td>14</td>\n","      <td>289700</td>\n","      <td>4.83</td>\n","      <td>Albania1987</td>\n","      <td>2,156,624,900</td>\n","      <td>796</td>\n","      <td>Generation X</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Albania</td>\n","      <td>1987</td>\n","      <td>male</td>\n","      <td>0-75</td>\n","      <td>1</td>\n","      <td>21800</td>\n","      <td>4.59</td>\n","      <td>Albania1987</td>\n","      <td>2,156,624,900</td>\n","      <td>796</td>\n","      <td>G.I. Generation</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Albania</td>\n","      <td>1987</td>\n","      <td>male</td>\n","      <td>25-34</td>\n","      <td>9</td>\n","      <td>274300</td>\n","      <td>3.28</td>\n","      <td>Albania1987</td>\n","      <td>2,156,624,900</td>\n","      <td>796</td>\n","      <td>Boomers</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3f73af99-b1c9-4b36-84a6-9f696195b312')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3f73af99-b1c9-4b36-84a6-9f696195b312 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3f73af99-b1c9-4b36-84a6-9f696195b312');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["df.sample(20)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":677},"id":"DF2e6Luyh2K0","executionInfo":{"status":"ok","timestamp":1688552903877,"user_tz":-330,"elapsed":510,"user":{"displayName":"Mukul Saini","userId":"14387970865535014153"}},"outputId":"97775b70-700f-4e88-9f3e-38cbce2af9fd"},"execution_count":58,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   country  year     sex      age  suicides_no  population  \\\n","18707             Paraguay  1999  female   25-34             0      362111   \n","7823               Ecuador  1995  female  0-0-75             1      106143   \n","23207             Slovenia  2009    male   25-34            43      162292   \n","9344                France  2006  female   35-54          1130     8713240   \n","104                Albania  1997  female   35-54             7      370100   \n","24860          Switzerland  2006  female  0-0-75           108      367433   \n","24185             Suriname  1999  female    5-14             0       48443   \n","3430               Belarus  2014    male   55-74           341      807337   \n","12097              Ireland  1988  female   35-54            32      374900   \n","11077               Guyana  1989    male   55-74             8       24423   \n","27396              Uruguay  2001  female   25-34            14      236799   \n","6355            Costa Rica  2013  female    5-14             1      357050   \n","14161             Kiribati  2000  female  0-0-75             0         522   \n","20275    Republic of Korea  1988  female   35-54           213     4499800   \n","25567  Trinidad and Tobago  2006    male   55-74            17       80846   \n","24117             Suriname  1992    male   55-74             5       18529   \n","1300                 Aruba  2001  female  0-0-75             0        1519   \n","15754             Maldives  2005  female    5-14             0       34367   \n","4629              Bulgaria  1992  female  0-0-75           104      234600   \n","8371               Estonia  1996    male   15-24            37       99540   \n","\n","       suicides/100k pop             country-year  gdp_for_year ($)   \\\n","18707               0.00             Paraguay1999      8,392,549,702   \n","7823                0.94              Ecuador1995     24,432,884,442   \n","23207              26.50             Slovenia2009     50,244,793,832   \n","9344               12.97               France2006  2,318,593,651,988   \n","104                 1.89              Albania1997      2,359,903,108   \n","24860              29.39          Switzerland2006    430,921,192,375   \n","24185               0.00             Suriname1999        885,444,186   \n","3430               42.24              Belarus2014     78,813,839,984   \n","12097               8.54              Ireland1988     37,818,134,253   \n","11077              32.76               Guyana1989        379,779,390   \n","27396               5.91              Uruguay2001     20,898,788,417   \n","6355                0.28           Costa Rica2013     49,745,088,112   \n","14161               0.00             Kiribati2000         67,254,174   \n","20275               4.73    Republic of Korea1988    196,964,195,387   \n","25567              21.03  Trinidad and Tobago2006     18,369,070,085   \n","24117              26.98             Suriname1992        404,600,000   \n","1300                0.00                Aruba2001      1,920,262,570   \n","15754               0.00             Maldives2005      1,163,362,438   \n","4629               44.33             Bulgaria1992     10,350,515,464   \n","8371               37.17              Estonia1996      4,746,109,767   \n","\n","       gdp_per_capita ($)       generation  \n","18707                1868     Generation X  \n","7823                 2453  G.I. Generation  \n","23207               25872     Generation X  \n","9344                40097          Boomers  \n","104                   793          Boomers  \n","24860               60536           Silent  \n","24185                2142       Millenials  \n","3430                 8849          Boomers  \n","12097               11696           Silent  \n","11077                 581  G.I. Generation  \n","27396                6827     Generation X  \n","6355                11443     Generation Z  \n","14161                 928  G.I. Generation  \n","20275                5089           Silent  \n","25567               15190           Silent  \n","24117                1093           Silent  \n","1300                22317           Silent  \n","15754                4026       Millenials  \n","4629                 1287  G.I. Generation  \n","8371                 3536     Generation X  "],"text/html":["\n","  <div id=\"df-9328435e-2d13-4443-8b6d-8697403b850b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>year</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>suicides_no</th>\n","      <th>population</th>\n","      <th>suicides/100k pop</th>\n","      <th>country-year</th>\n","      <th>gdp_for_year ($)</th>\n","      <th>gdp_per_capita ($)</th>\n","      <th>generation</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>18707</th>\n","      <td>Paraguay</td>\n","      <td>1999</td>\n","      <td>female</td>\n","      <td>25-34</td>\n","      <td>0</td>\n","      <td>362111</td>\n","      <td>0.00</td>\n","      <td>Paraguay1999</td>\n","      <td>8,392,549,702</td>\n","      <td>1868</td>\n","      <td>Generation X</td>\n","    </tr>\n","    <tr>\n","      <th>7823</th>\n","      <td>Ecuador</td>\n","      <td>1995</td>\n","      <td>female</td>\n","      <td>0-0-75</td>\n","      <td>1</td>\n","      <td>106143</td>\n","      <td>0.94</td>\n","      <td>Ecuador1995</td>\n","      <td>24,432,884,442</td>\n","      <td>2453</td>\n","      <td>G.I. Generation</td>\n","    </tr>\n","    <tr>\n","      <th>23207</th>\n","      <td>Slovenia</td>\n","      <td>2009</td>\n","      <td>male</td>\n","      <td>25-34</td>\n","      <td>43</td>\n","      <td>162292</td>\n","      <td>26.50</td>\n","      <td>Slovenia2009</td>\n","      <td>50,244,793,832</td>\n","      <td>25872</td>\n","      <td>Generation X</td>\n","    </tr>\n","    <tr>\n","      <th>9344</th>\n","      <td>France</td>\n","      <td>2006</td>\n","      <td>female</td>\n","      <td>35-54</td>\n","      <td>1130</td>\n","      <td>8713240</td>\n","      <td>12.97</td>\n","      <td>France2006</td>\n","      <td>2,318,593,651,988</td>\n","      <td>40097</td>\n","      <td>Boomers</td>\n","    </tr>\n","    <tr>\n","      <th>104</th>\n","      <td>Albania</td>\n","      <td>1997</td>\n","      <td>female</td>\n","      <td>35-54</td>\n","      <td>7</td>\n","      <td>370100</td>\n","      <td>1.89</td>\n","      <td>Albania1997</td>\n","      <td>2,359,903,108</td>\n","      <td>793</td>\n","      <td>Boomers</td>\n","    </tr>\n","    <tr>\n","      <th>24860</th>\n","      <td>Switzerland</td>\n","      <td>2006</td>\n","      <td>female</td>\n","      <td>0-0-75</td>\n","      <td>108</td>\n","      <td>367433</td>\n","      <td>29.39</td>\n","      <td>Switzerland2006</td>\n","      <td>430,921,192,375</td>\n","      <td>60536</td>\n","      <td>Silent</td>\n","    </tr>\n","    <tr>\n","      <th>24185</th>\n","      <td>Suriname</td>\n","      <td>1999</td>\n","      <td>female</td>\n","      <td>5-14</td>\n","      <td>0</td>\n","      <td>48443</td>\n","      <td>0.00</td>\n","      <td>Suriname1999</td>\n","      <td>885,444,186</td>\n","      <td>2142</td>\n","      <td>Millenials</td>\n","    </tr>\n","    <tr>\n","      <th>3430</th>\n","      <td>Belarus</td>\n","      <td>2014</td>\n","      <td>male</td>\n","      <td>55-74</td>\n","      <td>341</td>\n","      <td>807337</td>\n","      <td>42.24</td>\n","      <td>Belarus2014</td>\n","      <td>78,813,839,984</td>\n","      <td>8849</td>\n","      <td>Boomers</td>\n","    </tr>\n","    <tr>\n","      <th>12097</th>\n","      <td>Ireland</td>\n","      <td>1988</td>\n","      <td>female</td>\n","      <td>35-54</td>\n","      <td>32</td>\n","      <td>374900</td>\n","      <td>8.54</td>\n","      <td>Ireland1988</td>\n","      <td>37,818,134,253</td>\n","      <td>11696</td>\n","      <td>Silent</td>\n","    </tr>\n","    <tr>\n","      <th>11077</th>\n","      <td>Guyana</td>\n","      <td>1989</td>\n","      <td>male</td>\n","      <td>55-74</td>\n","      <td>8</td>\n","      <td>24423</td>\n","      <td>32.76</td>\n","      <td>Guyana1989</td>\n","      <td>379,779,390</td>\n","      <td>581</td>\n","      <td>G.I. Generation</td>\n","    </tr>\n","    <tr>\n","      <th>27396</th>\n","      <td>Uruguay</td>\n","      <td>2001</td>\n","      <td>female</td>\n","      <td>25-34</td>\n","      <td>14</td>\n","      <td>236799</td>\n","      <td>5.91</td>\n","      <td>Uruguay2001</td>\n","      <td>20,898,788,417</td>\n","      <td>6827</td>\n","      <td>Generation X</td>\n","    </tr>\n","    <tr>\n","      <th>6355</th>\n","      <td>Costa Rica</td>\n","      <td>2013</td>\n","      <td>female</td>\n","      <td>5-14</td>\n","      <td>1</td>\n","      <td>357050</td>\n","      <td>0.28</td>\n","      <td>Costa Rica2013</td>\n","      <td>49,745,088,112</td>\n","      <td>11443</td>\n","      <td>Generation Z</td>\n","    </tr>\n","    <tr>\n","      <th>14161</th>\n","      <td>Kiribati</td>\n","      <td>2000</td>\n","      <td>female</td>\n","      <td>0-0-75</td>\n","      <td>0</td>\n","      <td>522</td>\n","      <td>0.00</td>\n","      <td>Kiribati2000</td>\n","      <td>67,254,174</td>\n","      <td>928</td>\n","      <td>G.I. Generation</td>\n","    </tr>\n","    <tr>\n","      <th>20275</th>\n","      <td>Republic of Korea</td>\n","      <td>1988</td>\n","      <td>female</td>\n","      <td>35-54</td>\n","      <td>213</td>\n","      <td>4499800</td>\n","      <td>4.73</td>\n","      <td>Republic of Korea1988</td>\n","      <td>196,964,195,387</td>\n","      <td>5089</td>\n","      <td>Silent</td>\n","    </tr>\n","    <tr>\n","      <th>25567</th>\n","      <td>Trinidad and Tobago</td>\n","      <td>2006</td>\n","      <td>male</td>\n","      <td>55-74</td>\n","      <td>17</td>\n","      <td>80846</td>\n","      <td>21.03</td>\n","      <td>Trinidad and Tobago2006</td>\n","      <td>18,369,070,085</td>\n","      <td>15190</td>\n","      <td>Silent</td>\n","    </tr>\n","    <tr>\n","      <th>24117</th>\n","      <td>Suriname</td>\n","      <td>1992</td>\n","      <td>male</td>\n","      <td>55-74</td>\n","      <td>5</td>\n","      <td>18529</td>\n","      <td>26.98</td>\n","      <td>Suriname1992</td>\n","      <td>404,600,000</td>\n","      <td>1093</td>\n","      <td>Silent</td>\n","    </tr>\n","    <tr>\n","      <th>1300</th>\n","      <td>Aruba</td>\n","      <td>2001</td>\n","      <td>female</td>\n","      <td>0-0-75</td>\n","      <td>0</td>\n","      <td>1519</td>\n","      <td>0.00</td>\n","      <td>Aruba2001</td>\n","      <td>1,920,262,570</td>\n","      <td>22317</td>\n","      <td>Silent</td>\n","    </tr>\n","    <tr>\n","      <th>15754</th>\n","      <td>Maldives</td>\n","      <td>2005</td>\n","      <td>female</td>\n","      <td>5-14</td>\n","      <td>0</td>\n","      <td>34367</td>\n","      <td>0.00</td>\n","      <td>Maldives2005</td>\n","      <td>1,163,362,438</td>\n","      <td>4026</td>\n","      <td>Millenials</td>\n","    </tr>\n","    <tr>\n","      <th>4629</th>\n","      <td>Bulgaria</td>\n","      <td>1992</td>\n","      <td>female</td>\n","      <td>0-0-75</td>\n","      <td>104</td>\n","      <td>234600</td>\n","      <td>44.33</td>\n","      <td>Bulgaria1992</td>\n","      <td>10,350,515,464</td>\n","      <td>1287</td>\n","      <td>G.I. Generation</td>\n","    </tr>\n","    <tr>\n","      <th>8371</th>\n","      <td>Estonia</td>\n","      <td>1996</td>\n","      <td>male</td>\n","      <td>15-24</td>\n","      <td>37</td>\n","      <td>99540</td>\n","      <td>37.17</td>\n","      <td>Estonia1996</td>\n","      <td>4,746,109,767</td>\n","      <td>3536</td>\n","      <td>Generation X</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9328435e-2d13-4443-8b6d-8697403b850b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9328435e-2d13-4443-8b6d-8697403b850b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9328435e-2d13-4443-8b6d-8697403b850b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":58}]},{"cell_type":"code","source":["df[['min age', 'max age']] = df['age'].str.split('-', expand=True).astype(int)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":311},"id":"RXRK904Yh2Ql","executionInfo":{"status":"error","timestamp":1688552932713,"user_tz":-330,"elapsed":704,"user":{"displayName":"Mukul Saini","userId":"14387970865535014153"}},"outputId":"f21d2ef0-6468-410b-8c47-03cb3f751228"},"execution_count":61,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-61-dc0111bcd7d1>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'min age'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'max age'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'age'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msplit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'-'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexpand\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mint\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   6238\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6239\u001b[0m             \u001b[0;31m# else, only a single dtype is given\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 6240\u001b[0;31m             \u001b[0mnew_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_mgr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   6241\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_constructor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_data\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__finalize__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6242\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    446\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    447\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mbool\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mstr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"raise\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mT\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 448\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"astype\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    449\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    450\u001b[0m     def convert(\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mapply\u001b[0;34m(self, f, align_keys, ignore_failures, **kwargs)\u001b[0m\n\u001b[1;32m    350\u001b[0m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    351\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 352\u001b[0;31m                     \u001b[0mapplied\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mb\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    353\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mTypeError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mNotImplementedError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    354\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mignore_failures\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/internals/blocks.py\u001b[0m in \u001b[0;36mastype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    524\u001b[0m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    525\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 526\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array_safe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    527\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    528\u001b[0m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmaybe_coerce_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_values\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/dtypes/astype.py\u001b[0m in \u001b[0;36mastype_array_safe\u001b[0;34m(values, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    297\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    298\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 299\u001b[0;31m         \u001b[0mnew_values\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    300\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mValueError\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    301\u001b[0m         \u001b[0;31m# e.g. astype_nansafe can fail on object-dtype of strings\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/dtypes/astype.py\u001b[0m in \u001b[0;36mastype_array\u001b[0;34m(values, dtype, copy)\u001b[0m\n\u001b[1;32m    228\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    229\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 230\u001b[0;31m         \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mastype_nansafe\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    231\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    232\u001b[0m     \u001b[0;31m# in pandas we don't store numpy str dtypes, so convert to object\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/dtypes/astype.py\u001b[0m in \u001b[0;36mastype_nansafe\u001b[0;34m(arr, dtype, copy, skipna)\u001b[0m\n\u001b[1;32m    168\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mcopy\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mis_object_dtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    169\u001b[0m         \u001b[0;31m# Explicit copy, or required since NumPy can't view from / to object.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 170\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    171\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    172\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: int() argument must be a string, a bytes-like object or a real number, not 'NoneType'"]}]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"0guwRrEqiiJ1","executionInfo":{"status":"ok","timestamp":1688552924864,"user_tz":-330,"elapsed":767,"user":{"displayName":"Mukul Saini","userId":"14387970865535014153"}},"outputId":"47423970-f58d-4883-e6c0-c613d34c0eb1"},"execution_count":60,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   country  year     sex      age  suicides_no  population  suicides/100k pop  \\\n","0  Albania  1987    male   15-24            21      312900               6.71   \n","1  Albania  1987    male   35-54            16      308000               5.19   \n","2  Albania  1987  female   15-24            14      289700               4.83   \n","3  Albania  1987    male  0-0-75             1       21800               4.59   \n","4  Albania  1987    male   25-34             9      274300               3.28   \n","\n","  country-year  gdp_for_year ($)   gdp_per_capita ($)       generation  \n","0  Albania1987      2,156,624,900                 796     Generation X  \n","1  Albania1987      2,156,624,900                 796           Silent  \n","2  Albania1987      2,156,624,900                 796     Generation X  \n","3  Albania1987      2,156,624,900                 796  G.I. Generation  \n","4  Albania1987      2,156,624,900                 796          Boomers  "],"text/html":["\n","  <div id=\"df-9ba63955-e4ae-4123-8ff0-139250bef716\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>year</th>\n","      <th>sex</th>\n","      <th>age</th>\n","      <th>suicides_no</th>\n","      <th>population</th>\n","      <th>suicides/100k pop</th>\n","      <th>country-year</th>\n","      <th>gdp_for_year ($)</th>\n","      <th>gdp_per_capita ($)</th>\n","      <th>generation</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Albania</td>\n","      <td>1987</td>\n","      <td>male</td>\n","      <td>15-24</td>\n","      <td>21</td>\n","      <td>312900</td>\n","      <td>6.71</td>\n","      <td>Albania1987</td>\n","      <td>2,156,624,900</td>\n","      <td>796</td>\n","      <td>Generation X</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Albania</td>\n","      <td>1987</td>\n","      <td>male</td>\n","      <td>35-54</td>\n","      <td>16</td>\n","      <td>308000</td>\n","      <td>5.19</td>\n","      <td>Albania1987</td>\n","      <td>2,156,624,900</td>\n","      <td>796</td>\n","      <td>Silent</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Albania</td>\n","      <td>1987</td>\n","      <td>female</td>\n","      <td>15-24</td>\n","      <td>14</td>\n","      <td>289700</td>\n","      <td>4.83</td>\n","      <td>Albania1987</td>\n","      <td>2,156,624,900</td>\n","      <td>796</td>\n","      <td>Generation X</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Albania</td>\n","      <td>1987</td>\n","      <td>male</td>\n","      <td>0-0-75</td>\n","      <td>1</td>\n","      <td>21800</td>\n","      <td>4.59</td>\n","      <td>Albania1987</td>\n","      <td>2,156,624,900</td>\n","      <td>796</td>\n","      <td>G.I. Generation</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Albania</td>\n","      <td>1987</td>\n","      <td>male</td>\n","      <td>25-34</td>\n","      <td>9</td>\n","      <td>274300</td>\n","      <td>3.28</td>\n","      <td>Albania1987</td>\n","      <td>2,156,624,900</td>\n","      <td>796</td>\n","      <td>Boomers</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9ba63955-e4ae-4123-8ff0-139250bef716')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9ba63955-e4ae-4123-8ff0-139250bef716 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9ba63955-e4ae-4123-8ff0-139250bef716');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["df.drop(columns='age',inplace=True)"],"metadata":{"id":"dhmu7XaXin2V","executionInfo":{"status":"ok","timestamp":1688552026052,"user_tz":-330,"elapsed":434,"user":{"displayName":"Mukul Saini","userId":"14387970865535014153"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"3SB2yT4ajlHn","executionInfo":{"status":"ok","timestamp":1688552241256,"user_tz":-330,"elapsed":766,"user":{"displayName":"Mukul Saini","userId":"14387970865535014153"}},"outputId":"12fa9777-6f01-47ee-a607-acb78d892ee0"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   country  year     sex  suicides_no  population  suicides/100k pop  \\\n","0  Albania  1987    male           21      312900               6.71   \n","1  Albania  1987    male           16      308000               5.19   \n","2  Albania  1987  female           14      289700               4.83   \n","3  Albania  1987    male            1       21800               4.59   \n","4  Albania  1987    male            9      274300               3.28   \n","\n","  country-year  gdp_for_year ($)   gdp_per_capita ($)       generation  \\\n","0  Albania1987      2,156,624,900                 796     Generation X   \n","1  Albania1987      2,156,624,900                 796           Silent   \n","2  Albania1987      2,156,624,900                 796     Generation X   \n","3  Albania1987      2,156,624,900                 796  G.I. Generation   \n","4  Albania1987      2,156,624,900                 796          Boomers   \n","\n","   min age  max age  \n","0       15       24  \n","1       35       54  \n","2       15       24  \n","3        0       75  \n","4       25       34  "],"text/html":["\n","  <div id=\"df-4cecbf94-2846-4862-b0db-b40fac60330b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>country</th>\n","      <th>year</th>\n","      <th>sex</th>\n","      <th>suicides_no</th>\n","      <th>population</th>\n","      <th>suicides/100k pop</th>\n","      <th>country-year</th>\n","      <th>gdp_for_year ($)</th>\n","      <th>gdp_per_capita ($)</th>\n","      <th>generation</th>\n","      <th>min age</th>\n","      <th>max age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Albania</td>\n","      <td>1987</td>\n","      <td>male</td>\n","      <td>21</td>\n","      <td>312900</td>\n","      <td>6.71</td>\n","      <td>Albania1987</td>\n","      <td>2,156,624,900</td>\n","      <td>796</td>\n","      <td>Generation X</td>\n","      <td>15</td>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Albania</td>\n","      <td>1987</td>\n","      <td>male</td>\n","      <td>16</td>\n","      <td>308000</td>\n","      <td>5.19</td>\n","      <td>Albania1987</td>\n","      <td>2,156,624,900</td>\n","      <td>796</td>\n","      <td>Silent</td>\n","      <td>35</td>\n","      <td>54</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Albania</td>\n","      <td>1987</td>\n","      <td>female</td>\n","      <td>14</td>\n","      <td>289700</td>\n","      <td>4.83</td>\n","      <td>Albania1987</td>\n","      <td>2,156,624,900</td>\n","      <td>796</td>\n","      <td>Generation X</td>\n","      <td>15</td>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Albania</td>\n","      <td>1987</td>\n","      <td>male</td>\n","      <td>1</td>\n","      <td>21800</td>\n","      <td>4.59</td>\n","      <td>Albania1987</td>\n","      <td>2,156,624,900</td>\n","      <td>796</td>\n","      <td>G.I. Generation</td>\n","      <td>0</td>\n","      <td>75</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Albania</td>\n","      <td>1987</td>\n","      <td>male</td>\n","      <td>9</td>\n","      <td>274300</td>\n","      <td>3.28</td>\n","      <td>Albania1987</td>\n","      <td>2,156,624,900</td>\n","      <td>796</td>\n","      <td>Boomers</td>\n","      <td>25</td>\n","      <td>34</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4cecbf94-2846-4862-b0db-b40fac60330b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4cecbf94-2846-4862-b0db-b40fac60330b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4cecbf94-2846-4862-b0db-b40fac60330b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["x=df.drop(columns=['country','year','country-year','generation','sex'],axis=1,inplace=True)\n"],"metadata":{"id":"DU3n9YyLlDol","executionInfo":{"status":"ok","timestamp":1688552765284,"user_tz":-330,"elapsed":7,"user":{"displayName":"Mukul Saini","userId":"14387970865535014153"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","source":["x.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":165},"id":"Ie8znT51ltdG","executionInfo":{"status":"error","timestamp":1688552806772,"user_tz":-330,"elapsed":695,"user":{"displayName":"Mukul Saini","userId":"14387970865535014153"}},"outputId":"92d4cee7-2300-4199-e916-084dccdfb0e2"},"execution_count":49,"outputs":[{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-49-830ed5e65d76>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mAttributeError\u001b[0m: 'NoneType' object has no attribute 'head'"]}]}]}